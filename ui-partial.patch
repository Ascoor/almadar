 (cd "$(git rev-parse --show-toplevel)" && git apply --3way <<'EOF' 
diff --git a/frontend/src/components/layout/AppLayout.jsx b/frontend/src/components/layout/AppLayout.jsx
index b036909dff0f4906c190763dc0746491f1ab0ae0..c6c517fcac3a83cdb7a1086b7c3285c134b57722 100644
--- a/frontend/src/components/layout/AppLayout.jsx
+++ b/frontend/src/components/layout/AppLayout.jsx
@@ -1,63 +1,96 @@
-import React from 'react';
+import React, { useState, useEffect } from 'react';
 import { motion } from 'framer-motion';
-import {
-  SidebarProvider,
-  SidebarTrigger,
-  SidebarInset,
-} from '@/components/ui/sidebar';
+import { Search, Menu } from 'lucide-react';
 import AppSidebar from './AppSidebar';
-import { Search } from 'lucide-react';
 import { Input } from '@/components/ui/input';
 import { LanguageToggle } from '@/components/common/LanguageToggle';
 import { ThemeToggle } from '@/components/common/ThemeToggle';
 import ProfileMenu from '@/components/common/ProfileMenu';
 import { useLanguage } from '@/context/LanguageContext';
+import { useIsMobile } from '@/hooks/use-mobile';
 
 const AppLayout = ({ children }) => {
   const { isRTL } = useLanguage();
+  const isMobile = useIsMobile();
+  const [isSidebarOpen, setSidebarOpen] = useState(!isMobile);
+
+  useEffect(() => {
+    setSidebarOpen(!isMobile);
+  }, [isMobile]);
+
+  const toggleSidebar = () => setSidebarOpen((o) => !o);
+  const closeSidebar = () => setSidebarOpen(false);
+
+  const marginClass = !isMobile
+    ? isSidebarOpen
+      ? isRTL
+        ? 'mr-64'
+        : 'ml-64'
+      : isRTL
+      ? 'mr-16'
+      : 'ml-16'
+    : '';
 
   return (
-    <SidebarProvider defaultOpen={false}>
-      <AppSidebar />
-      <SidebarInset dir={isRTL ? 'rtl' : 'ltr'} className="flex flex-col">
+    <div dir={isRTL ? 'rtl' : 'ltr'}>
+      {!isSidebarOpen && isMobile && (
+        <button
+          onClick={toggleSidebar}
+          className={`fixed top-1/2 -translate-y-1/2 z-40 p-2 rounded bg-primary text-primary-foreground ${
+            isRTL ? 'right-0' : 'left-0'
+          }`}
+        >
+          <Menu className="h-5 w-5" />
+        </button>
+      )}
+
+      <AppSidebar
+        isOpen={isSidebarOpen}
+        toggleSidebar={toggleSidebar}
+        closeSidebar={closeSidebar}
+        isMobile={isMobile}
+        isRTL={isRTL}
+      />
+
+      <div className={`flex flex-col min-h-screen transition-all duration-300 ${marginClass}`}>
         {/* Header */}
         <motion.header
           initial={{ opacity: 0, y: -20 }}
           animate={{ opacity: 1, y: 0 }}
-          className="h-16 border-b border-border bg-card/50 backdrop-blur-sm sticky top-0 z-40"
+          className="h-16 border-b border-border bg-card/50 backdrop-blur-sm sticky top-0 z-30 flex items-center justify-between px-6"
         >
-          <div className="flex items-center justify-between px-6 h-full">
-            <div className="flex items-center space-x-4 space-x-reverse">
-              <SidebarTrigger className="md:hidden" />
-              <h1 className="text-xl font-semibold text-foreground">
-                منصة المدار
-              </h1>
-              <div className="relative hidden md:block">
-                <Search className="absolute left-3 top-1/2 transform -translate-y-1/2 h-4 w-4 text-muted-foreground" />
-                <Input placeholder="البحث..." className="pl-10 w-64 focus-ring" />
-              </div>
+          <div className="flex items-center space-x-4 space-x-reverse">
+            {!isMobile && (
+              <button onClick={toggleSidebar} className="p-2 rounded hover:bg-muted">
+                <Menu className="h-5 w-5" />
+              </button>
+            )}
+            <h1 className="text-xl font-semibold text-foreground">منصة المدار</h1>
+            <div className="relative hidden md:block">
+              <Search className="absolute left-3 top-1/2 transform -translate-y-1/2 h-4 w-4 text-muted-foreground" />
+              <Input placeholder="البحث..." className="pl-10 w-64 focus-ring" />
             </div>
+          </div>
 
-            <div className="flex items-center space-x-2 space-x-reverse">
-              <LanguageToggle />
-              <ThemeToggle />
-              <ProfileMenu />
-            </div>
+          <div className="flex items-center space-x-2 space-x-reverse">
+            <LanguageToggle />
+            <ThemeToggle />
+            <ProfileMenu />
           </div>
         </motion.header>
 
         {/* Main Content */}
         <motion.div
           initial={{ opacity: 0 }}
           animate={{ opacity: 1 }}
           transition={{ delay: 0.1 }}
           className="flex-1 overflow-auto bg-background"
         >
           <div className="p-6">{children}</div>
         </motion.div>
-      </SidebarInset>
-    </SidebarProvider>
+      </div>
+    </div>
   );
 };
 
-export default AppLayout;
\ No newline at end of file
+export default AppLayout;
diff --git a/frontend/src/components/layout/AppSidebar.jsx b/frontend/src/components/layout/AppSidebar.jsx
old mode 100755
new mode 100644
index b1b1712b5a73a256d59933fb51ecb843340450f8..cbb8e5ce77bd3123e997b78dc937ab893de3326a
--- a/frontend/src/components/layout/AppSidebar.jsx
+++ b/frontend/src/components/layout/AppSidebar.jsx
@@ -1,259 +1,108 @@
-import React from 'react';
-import { NavLink, useLocation } from 'react-router-dom';
-import { motion } from 'framer-motion';
-import {
-  LayoutDashboard,
-  FileText,
-  Scale,
-  Search,
-  Users,
-  Settings,
-  Gavel,
-  Archive,
-  ChevronRight,
-  LogOut,
-  User,
-} from 'lucide-react';
-import {
-  Sidebar,
-  SidebarContent,
-  SidebarGroup,
-  SidebarGroupContent,
-  SidebarGroupLabel,
-  SidebarMenu,
-  SidebarMenuButton,
-  SidebarMenuItem,
-  SidebarTrigger,
-  useSidebar,
-} from '@/components/ui/sidebar';
-import { Button } from '@/components/ui/button';
-import { Avatar, AvatarFallback } from '@/components/ui/avatar';
-import { useAuth } from '@/context/AuthContext';
-import { useLanguage } from '@/context/LanguageContext';
+import React, { useState } from 'react';
+import { NavLink } from 'react-router-dom';
+import { motion, AnimatePresence } from 'framer-motion';
+import { LayoutDashboard, Settings, ChevronDown, Menu } from 'lucide-react';
 
-const navigationItems = [
+// Sidebar sections with sub items
+const sections = [
   {
-    title: 'لوحة التحكم',
-    url: '/dashboard',
+    title: 'الرئيسية',
     icon: LayoutDashboard,
-    permission: 'dashboard',
+    items: [
+      { title: 'لوحة التحكم', to: '/dashboard' },
+    ],
   },
   {
-    title: 'العقود',
-    url: '/contracts',
-    icon: FileText,
-    permission: 'contracts',
-  },
-  {
-    title: 'الاستشارات القانونية',
-    url: '/legal-advice',
-    icon: Scale,
-    permission: 'legal-advice',
-  },
-  {
-    title: 'التحقيقات',
-    url: '/investigations',
-    icon: Search,
-    permission: 'investigations',
-  },
-  {
-    title: 'القضايا',
-    url: '/litigations',
-    icon: Gavel,
-    permission: 'litigations',
-  },
-  {
-    title: 'الأرشيف',
-    url: '/archive',
-    icon: Archive,
-    permission: 'archive',
-  },
-];
-
-const adminItems = [
-  {
-    title: 'إدارة المستخدمين',
-    url: '/users',
-    icon: Users,
-    permission: 'users',
-  },
-  {
-    title: 'الإعدادات',
-    url: '/settings',
+    title: 'الإدارة',
     icon: Settings,
-    permission: 'settings',
+    items: [
+      { title: 'المستخدمون', to: '/users' },
+      { title: 'الإعدادات', to: '/settings' },
+    ],
   },
 ];
-function AppSidebar() {
-  const { state, isMobile, setOpenMobile } = useSidebar();
-  const location = useLocation();
-  const { user, logout } = useAuth();
-  const { isRTL } = useLanguage();
-  const currentPath = location.pathname;
-  const collapsed = state === 'collapsed';
 
-  const isActive = (path) => currentPath === path;
+const AppSidebar = ({ isOpen, toggleSidebar, closeSidebar, isMobile, isRTL }) => {
+  const [openSection, setOpenSection] = useState(null);
 
-  const getNavCls = ({ isActive }) =>
-    isActive
-      ? 'bg-sidebar-accent text-sidebar-accent-foreground font-medium'
-      : 'hover:bg-sidebar-accent/50 text-sidebar-foreground hover:text-sidebar-accent-foreground';
-
-  const hasPermission = (permission) => {
-    return user?.role === 'Admin' || user?.permissions?.includes(permission);
+  const handleSection = (title) => {
+    setOpenSection((prev) => (prev === title ? null : title));
   };
 
-  const handleLinkClick = () => {
-    if (isMobile) setOpenMobile(false);
-  };
+  const width = isMobile ? (isOpen ? 256 : 0) : isOpen ? 256 : 64;
+  const sideClass = isRTL ? 'right-0' : 'left-0';
 
   return (
-    <Sidebar
-      side={isRTL ? 'right' : 'left'}
-      className={`${isRTL ? 'border-l' : 'border-r'} border-sidebar-border`}
-      collapsible="icon"
-    >
-      <SidebarContent
-        className={`bg-sidebar transition-all duration-300 ${
-          isRTL ? 'animate-slide-in-right' : 'animate-slide-in-left'
-        }`}
+    <>
+      <motion.aside
+        initial={false}
+        animate={{ width }}
+        className={`fixed top-0 ${sideClass} h-full bg-sidebar text-sidebar-foreground z-40 overflow-hidden shadow-lg`}
       >
-        {/* User Profile Section */}
-        {!collapsed && (
-          <motion.div
-            initial={{ opacity: 0, y: -20 }}
-            animate={{ opacity: 1, y: 0 }}
-            className="p-4 border-b border-sidebar-border"
+        <div className="h-16 flex items-center justify-center border-b border-sidebar-border">
+          <button
+            onClick={toggleSidebar}
+            className="p-2 rounded hover:bg-sidebar-accent"
           >
-            <div className="flex items-center space-x-3 space-x-reverse">
-              <Avatar className="h-10 w-10">
-                <AvatarFallback className="bg-sidebar-accent text-sidebar-accent-foreground">
-                  {user?.name
-                    ? user.name
-                        .split(' ')
-                        .map((n) => n[0])
-                        .join('')
-                        .toUpperCase()
-                    : 'U'}
-                </AvatarFallback>
-              </Avatar>
-              <div className="flex-1 min-w-0">
-                <p className="text-sm font-medium text-sidebar-foreground truncate">{user?.name}</p>
-                <p className="text-xs text-sidebar-foreground/70 truncate">{user?.role}</p>
-              </div>
-            </div>
-          </motion.div>
-        )}
-
-        {/* Toggle Button */}
-        <div className="p-2 hidden md:block">
-          <SidebarTrigger className="w-full justify-center hover:bg-sidebar-accent hover:text-sidebar-accent-foreground" />
+            <Menu className="h-5 w-5" />
+          </button>
         </div>
-
-        {/* Main Navigation */}
-        <SidebarGroup>
-          <SidebarGroupLabel className="text-sidebar-foreground/70 px-4 py-2">
-            {!collapsed && 'الصفحات الرئيسية'}
-          </SidebarGroupLabel>
-          <SidebarGroupContent>
-            <SidebarMenu>
-              {navigationItems.map((item) =>
-                hasPermission(item.permission) ? (
-                  <SidebarMenuItem key={item.title}>
-                    <SidebarMenuButton asChild>
+        <nav className="p-2">
+          {sections.map((section) => (
+            <div key={section.title}>
+              <button
+                onClick={() => handleSection(section.title)}
+                className="flex items-center w-full px-2 py-2 rounded hover:bg-sidebar-accent"
+              >
+                <section.icon className="h-5 w-5" />
+                {isOpen && (
+                  <>
+                    <span className="mx-3 flex-1 text-start">{section.title}</span>
+                    <ChevronDown
+                      className={`h-4 w-4 transition-transform ${
+                        openSection === section.title ? 'rotate-180' : ''
+                      }`}
+                    />
+                  </>
+                )}
+              </button>
+              <AnimatePresence>
+                {isOpen && openSection === section.title && (
+                  <motion.div
+                    initial={{ height: 0, opacity: 0 }}
+                    animate={{ height: 'auto', opacity: 1 }}
+                    exit={{ height: 0, opacity: 0 }}
+                    className="pl-8"
+                  >
+                    {section.items.map((item) => (
                       <NavLink
-                        to={item.url}
-                        className={getNavCls}
-                        onClick={handleLinkClick}
+                        key={item.to}
+                        to={item.to}
+                        onClick={closeSidebar}
+                        className={({ isActive }) =>
+                          `block py-1 text-sm rounded hover:bg-sidebar-accent ${
+                            isActive ? 'font-medium' : ''
+                          }`
+                        }
                       >
-                        <item.icon
-                          className={`h-5 w-5 ${
-                            collapsed ? 'mx-auto' : isRTL ? 'ml-3' : 'mr-3'
-                          }`}
-                        />
-                        {!collapsed && (
-                          <>
-                            <span className="flex-1">{item.title}</span>
-                            {isActive(item.url) && <ChevronRight className="h-4 w-4" />}
-                          </>
-                        )}
+                        {item.title}
                       </NavLink>
-                    </SidebarMenuButton>
-                  </SidebarMenuItem>
-                ) : null
-              )}
-            </SidebarMenu>
-          </SidebarGroupContent>
-        </SidebarGroup>
-
-        {/* Admin Section */}
-        {user?.role === 'Admin' && (
-          <SidebarGroup>
-            <SidebarGroupLabel className="text-sidebar-foreground/70 px-4 py-2">
-              {!collapsed && 'الإدارة'}
-            </SidebarGroupLabel>
-            <SidebarGroupContent>
-              <SidebarMenu>
-                {adminItems.map((item) =>
-                  hasPermission(item.permission) ? (
-                    <SidebarMenuItem key={item.title}>
-                      <SidebarMenuButton asChild>
-                        <NavLink
-                          to={item.url}
-                          className={getNavCls}
-                          onClick={handleLinkClick}
-                        >
-                          <item.icon
-                            className={`h-5 w-5 ${
-                              collapsed ? 'mx-auto' : isRTL ? 'ml-3' : 'mr-3'
-                            }`}
-                          />
-                          {!collapsed && (
-                            <>
-                              <span className="flex-1">{item.title}</span>
-                              {isActive(item.url) && <ChevronRight className="h-4 w-4" />}
-                            </>
-                          )}
-                        </NavLink>
-                      </SidebarMenuButton>
-                    </SidebarMenuItem>
-                  ) : null
+                    ))}
+                  </motion.div>
                 )}
-              </SidebarMenu>
-            </SidebarGroupContent>
-          </SidebarGroup>
-        )}
-
-        {/* Footer Actions */}
-        <div className="mt-auto p-4 border-t border-sidebar-border space-y-2">
-          <Button
-            variant="ghost"
-            size={collapsed ? 'icon' : 'sm'}
-            className="w-full justify-start text-sidebar-foreground hover:bg-sidebar-accent hover:text-sidebar-accent-foreground"
-            asChild
-          >
-            <NavLink to="/profile" onClick={handleLinkClick}>
-              <User className={`h-4 w-4 ${collapsed ? '' : isRTL ? 'ml-2' : 'mr-2'}`} />
-              {!collapsed && 'الملف الشخصي'}
-            </NavLink>
-          </Button>
-
-          <Button
-            variant="ghost"
-            size={collapsed ? 'icon' : 'sm'}
-            onClick={() => {
-              if (isMobile) setOpenMobile(false);
-              logout();
-            }}
-            className="w-full justify-start text-sidebar-foreground hover:bg-destructive hover:text-destructive-foreground"
-          >
-            <LogOut className={`h-4 w-4 ${collapsed ? '' : isRTL ? 'ml-2' : 'mr-2'}`} />
-            {!collapsed && 'تسجيل الخروج'}
-          </Button>
-        </div>
-      </SidebarContent>
-    </Sidebar>
+              </AnimatePresence>
+            </div>
+          ))}
+        </nav>
+      </motion.aside>
+      {isOpen && isMobile && (
+        <div
+          className="fixed inset-0 bg-black/40 z-30"
+          onClick={closeSidebar}
+        />
+      )}
+    </>
   );
-}
+};
 
-export default AppSidebar;
\ No newline at end of file
+export default AppSidebar;
 
EOF
)